<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

  <link rel="stylesheet" href="theme.css" />

  {{!-- Syntax highlight: PrismJS --}}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/themes/prism.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/themes/prism-okaidia.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/plugins/line-numbers/prism-line-numbers.css">

  <title>{{ title }}</title>
</head>
<body class="line-numbers">{{!-- Syntax highlight with line numbers --}}


  {{!-- Sidebar --}}
  <aside>
    {{#each sidebar}}
      <div class="section{{#if sections}} current{{/if}}">
        <div class="info">
          <div class="thumbnail" style="background-image: url({{filename}}.png);"></div>
          <div class="data">
            <small>Tutorial</small>
            <a href="{{filename}}.html">{{title}}</a>
          </div>
        </div>
          <ul>
          {{#if sections}}
            {{#each sections}}
              <li><a href="#{{id}}"><span class="num">{{num}}</span>{{title}}</a></li>
            {{/each}}
          {{/if}}
          </ul>
      </div>
    {{/each}}
  </aside>

  <main id="summary">
    {{#each sections}}
    <section class="{{#if @first}} summary {{else}} step {{/if}}">
      {{{ rendered }}}

      {{#unless @first}}

      <input type="checkbox" id="complete-{{ id }}" />
      <div>
        <label class="button" for="complete-{{ id }}">
          <span class="unchecked">Mark step as completed <div class="ifont ifont-lrn_icon_finish"></div></span>
          <span class="checked">Mark step as incomplete</span>
        </label>

        <div class="completion ifont ifont-lrn_icon_finish"></div>
      </div>
      {{/unless}}
    </section>

    {{!-- add separator between each step/section --}}
    {{#unless @first}}
      {{#unless @last}}
        <div class="step-separator"></div>
      {{/unless}}
    {{/unless}}

    {{/each}}

    <div class="step-separator"></div>

    <section class="step final">
      {{!-- TODO: Use different wording here --}}
      <p><small>You've made it!</small></p>

      <h2>{{title}}</h2>
      <a href="#" class="button">Mark all complete and continue</a>
      <p><a href="#">Continue without marking complete</a></p>
    </section>

  </main>

  <a href="#summary" class="back-to-top">
    <div class="ifont ifont-icons-jump-to-top"></div>
  </a>

  {{!-- Syntax highlight --}}
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/components/prism-core.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/plugins/autoloader/prism-autoloader.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/plugins/line-numbers/prism-line-numbers.js"></script>

  <script type="text/javascript">
    const completionCacheKey ="{{filename}}";
    const cacheCompletion = () => localStorage.setItem(completionCacheKey, JSON.stringify(cachedCompletionStatus));
    let cachedCompletionStatus = JSON.parse(localStorage.getItem(completionCacheKey) || "{}");
    console.log(cachedCompletionStatus);


    //
    // Scroll to top
    //
    const backToTopEl = document.querySelector(".back-to-top");
    window.addEventListener("scroll", function () {
      const y = window.scrollY;
      if (y >= 800) {
        backToTopEl.classList.add("show");
      } else {
        backToTopEl.classList.remove("show");
      }
    });

    //
    // Step completion: Scroll animation for next step
    //
    const stepSections = document.querySelectorAll('.step');
    const sidebarItems = document.querySelectorAll('aside ul li');
    const completionCheckboxes = document.querySelectorAll('.step input[type="checkbox"]');
    completionCheckboxes.forEach((checkbox, i) => {
      // Flag sidebar as checked
      checkbox.addEventListener("change", (event) => {
        if (checkbox.checked) {
          sidebarItems[i].classList.add("completed");

        } else {
          sidebarItems[i].classList.remove("completed");
        }
      });

      // Initial checked state from cached value
      if (cachedCompletionStatus[i]) {
        checkbox.checked = true;
        checkbox.dispatchEvent(new Event("change"));
      }

      checkbox.addEventListener("change", (event) => {
        const checked = checkbox.checked;

        cachedCompletionStatus[i] = checked;
        cacheCompletion();

        const nextSection = stepSections[i + 1];
        if (checked && nextSection) {
          window.scrollTo({
            top: nextSection.offsetTop - 50,
            left: 0,
            behavior: 'smooth'
          });
        }
      });

      //
      // TODO / IDEA: automatically scroll to the last unfinished step.
      //
    });

  </script>

</body>
</html>